'''
The groups_per_user function receives a dictionary, which contains group names with the list of users. 
Users can belong to multiple groups. Fill in the blanks to return a dictionary with the users as keys 
and a list of their groups as values.'''

def groups_per_user(dict):
	new_dict = {}
	for group , users in dict.items():
		for user in users:
			if user not in new_dict:
				new_dict[user] = []
			new_dict[user].append(group)
	return new_dict


print(groups_per_user({"local": ["admin", "userA"],
		"public":  ["admin", "userB"],
		"administrator": ["admin"] })) 

#Output
#{'admin': ['local', 'public', 'administrator'], 'userA': ['local'], 'userB': ['public']}